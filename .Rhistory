}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges, width = "100%")
View(data)
all_pmids
pmid <- c("25251072","23648942","22466793")
all_pmids <- paste(rs$pmid, collapse=",")
# We start with a list PubMed ids, for which we would like to have the citation graph
all_pmids <- c("25251072","23648942","22466793")
allpmids_ch <- paste(rs$pmid, collapse=",")
citegraph <- NULL
for(pmid in all_pmids){
# Get more info with the pmid id
tryCatch({
# We build the URL to retrieve the citing pmids
path <- paste("https://www.ncbi.nlm.nih.gov/pubmed?linkname=pubmed_pubmed_citedin&from_uid=",
pmid,
"&report=uilist&format=text&dispmax=200", sep="")
f <- file(path)
data <- readLines(f, warn = F)
data <- gsub("&lt;", "<", data)
data <- gsub("&gt;", ">", data)
citing <-strsplit(xmlToList(xmlParse(data, asText = T))[1], "\n")[[1]]
close(f)
if(length(citing) < 200){
for(pm in citing){
method = 0
if(grepl(pm, all_pmids)) method=1
citegraph <- rbind(citegraph, data.frame(pmid=rs$pmid[i], citing=as.numeric(pm), is_method = method))
}
}
message(paste0(rs$pmid[i]," done: ",length(pmids)," citations"))
# Store the failed PMIDS
}, warning = function(w) {
print(w)
return(w)
}, error = function(e) {
print(e)
return(e)
})
}
citegraph <- NULL
for(pmid in all_pmids){
# Get more info with the pmid id
tryCatch({
# We build the URL to retrieve the citing pmids
path <- paste("https://www.ncbi.nlm.nih.gov/pubmed?linkname=pubmed_pubmed_citedin&from_uid=",
pmid,
"&report=uilist&format=text&dispmax=200", sep="")
f <- file(path)
data <- readLines(f, warn = F)
data <- gsub("&lt;", "<", data)
data <- gsub("&gt;", ">", data)
citing <-strsplit(xmlToList(xmlParse(data, asText = T))[1], "\n")[[1]]
close(f)
message(citing)
if(length(citing) < 200){
for(pm in citing){
method = 0
if(grepl(pm, allpmids_ch)) method=1
citegraph <- rbind(citegraph, data.frame(pmid=rs$pmid[i], citing=as.numeric(pm), is_method = method))
}
}
message(paste0(rs$pmid[i]," done: ",length(pmids)," citations"))
# Store the failed PMIDS
}, warning = function(w) {
print(w)
return(w)
}, error = function(e) {
print(e)
return(e)
})
}
path <- paste("https://www.ncbi.nlm.nih.gov/pubmed?linkname=pubmed_pubmed_citedin&from_uid=",
pmid,
"&report=uilist&format=text&dispmax=200", sep="")
f <- file(path)
data <- readLines(f, warn = F)
data <- gsub("&lt;", "<", data)
data <- gsub("&gt;", ">", data)
path
data
library(plyr)
library(XML)
library(RCurl)
library(readxl)
library(visNetwork)
citing <-strsplit(xmlToList(xmlParse(data, asText = T))[1], "\n")[[1]]
citing
if(length(citing) < 200){
for(pm in citing){
method = 0
if(grepl(pm, allpmids_ch)) method=1
citegraph <- rbind(citegraph, data.frame(pmid=rs$pmid[i], citing=as.numeric(pm), is_method = method))
}
}
allpmids_ch <- paste(all_pmids, collapse=",")
allpmids_ch
if(grepl(pm, allpmids_ch)) method=1
if(length(citing) < 200){
for(pm in citing){
method = 0
if(grepl(pm, allpmids_ch)) method=1
citegraph <- rbind(citegraph, data.frame(pmid=rs$pmid[i], citing=as.numeric(pm), is_method = method))
}
}
if(length(citing) < 200){
for(pm in citing){
method = 0
if(grepl(pm, allpmids_ch)) method=1
citegraph <- rbind(citegraph, data.frame(pmid=as.numeric(pmid), citing=as.numeric(pm), is_method = method))
}
}
message(paste0(rs$pmid[i]," done: ",length(pmids)," citations"))
message(paste0(pmid," done: ",length(pmids)," citations"))
# We start with a list PubMed ids, for which we would like to have the citation graph
pmids <- c("25251072","23648942","22466793")
pmids_ch <- paste(all_pmids, collapse=",")
citegraph <- NULL
for(pmid in pmids){
# Get more info with the pmid id
tryCatch({
# We build the URL to retrieve the citing pmids
path <- paste("https://www.ncbi.nlm.nih.gov/pubmed?linkname=pubmed_pubmed_citedin&from_uid=",
pmid,
"&report=uilist&format=text&dispmax=200", sep="")
f <- file(path)
data <- readLines(f, warn = F)
data <- gsub("&lt;", "<", data)
data <- gsub("&gt;", ">", data)
citing <-strsplit(xmlToList(xmlParse(data, asText = T))[1], "\n")[[1]]
close(f)
if(length(citing) < 200){
for(pm in citing){
method = 0
if(grepl(pm, pmids_ch)) method=1
citegraph <- rbind(citegraph, data.frame(pmid=as.numeric(pmid), citing=as.numeric(pm), is_method = method))
}
}
message(paste0(pmid," done: ",length(citing)," citations"))
# Store the failed PMIDS
}, warning = function(w) {
print(w)
return(w)
}, error = function(e) {
print(e)
return(e)
})
}
pmid <- 23648942
path <- paste("https://www.ncbi.nlm.nih.gov/pubmed?linkname=pubmed_pubmed_citedin&from_uid=",
pmid,
"&report=uilist&format=text&dispmax=200", sep="")
f <- file(path)
data <- readLines(f, warn = F)
data
citing <-strsplit(xmlToList(xmlParse(data, asText = T))[1], "\n")[[1]]
data <- ddply(citegraph, .(pmid), summarise, all=length(citing), ratio = length(citing[is_method=1])/length(citing))
summary(data$ratio)
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "lightblue"
if(grepl(nodes$id[i], all_pmids)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges, width = "100%")
for(i in 1:nrow(nodes)){
nodes$color[i] <- "lightblue"
if(grepl(nodes$id[i], pmids_ch)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges, width = "100%")
pmids <- c(27352932,
26905656,
26476447,
26287479,
25657812,
25614065,
24744766,
24515834,
24143806,
24107223,
23875292,
23286457,
22558767,
21771915,
20453027)
pmids_ch <- paste(all_pmids, collapse=",")
citegraph <- NULL
for(pmid in pmids){
# Get more info with the pmid id
tryCatch({
# We build the URL to retrieve the citing pmids
path <- paste("https://www.ncbi.nlm.nih.gov/pubmed?linkname=pubmed_pubmed_citedin&from_uid=",
pmid,
"&report=uilist&format=text&dispmax=200", sep="")
f <- file(path)
data <- readLines(f, warn = F)
data <- gsub("&lt;", "<", data)
data <- gsub("&gt;", ">", data)
citing <-strsplit(xmlToList(xmlParse(data, asText = T))[1], "\n")[[1]]
close(f)
if(length(citing) < 200){
for(pm in citing){
method = 0
if(grepl(pm, pmids_ch)) method=1
citegraph <- rbind(citegraph, data.frame(pmid=as.numeric(pmid), citing=as.numeric(pm), is_method = method))
}
}
message(paste0(pmid," done: ",length(citing)," citations"))
# Store the failed PMIDS
}, warning = function(w) {
print(w)
return(w)
}, error = function(e) {
print(e)
return(e)
})
}
# Visualization
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "lightblue"
if(grepl(nodes$id[i], pmids_ch)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges, width = "100%")
pmids_ch
pmids_ch <- paste(pmids, collapse=",")
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "lightblue"
if(grepl(nodes$id[i], pmids_ch)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges, width = "100%")
# Visualization
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "lightblue"
nodes$value[i] <- 1
if(grepl(nodes$id[i], pmids_ch)){
nodes$color[i] <- "red"
nodes$value[i] <- 2
}
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges, width = "100%")
for(i in 1:nrow(nodes)){
nodes$color[i] <- "lightblue"
nodes$value[i] <- 1
if(grepl(nodes$id[i], pmids_ch)){
nodes$color[i] <- "red"
nodes$value[i] <- 1.2
}
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges, width = "100%")
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "lightblue"
if(grepl(nodes$id[i], pmids_ch)){
nodes$color[i] <- "red"
}
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges, width = "100%")
require(plyr)
network <- visNetwork(nodes, edges, width = "100%")
visSave(network, file = "~/Desktop/network.html")
require(plyr)
require(XML)
require(RCurl)
require(readxl)
require(visNetwork)
# We start with a list PubMed ids, for which we would like to have the citation graph
pmids <- c(27352932,
26905656,
26476447,
26287479,
25657812,
25614065,
24744766,
24515834,
24143806,
24107223,
23875292,
23286457,
22558767,
21771915,
20453027)
citegraph <- NULL
for(pmid in pmids){
# Get more info with the pmid id
tryCatch({
# We build the URL to retrieve the citing pmids
path <- paste("https://www.ncbi.nlm.nih.gov/pubmed?linkname=pubmed_pubmed_citedin&from_uid=",
pmid,
"&report=uilist&format=text&dispmax=200", sep="")
f <- file(path)
data <- readLines(f, warn = F)
citing <-strsplit(xmlToList(xmlParse(data, asText = T))[1], "\n")[[1]]
close(f)
# Then we create a table containing ll these pmids
if(length(citing) < 200){
for(pm in citing){
citegraph <- rbind(citegraph, data.frame(pmid=as.numeric(pmid), citing=as.numeric(pm)))
}
}
message(paste0(pmid," done: ",length(citing)," citations"))
}, warning = function(w) {
message(w)
}, error = function(e) {
message(e)
})
}
# We use visNetwork for the vizualisation of the network
# For that we need a nodes and edges tables.
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "lightblue"
if(grepl(nodes$id[i], pmids_ch)){
nodes$color[i] <- "red"
}
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
network <- visNetwork(nodes, edges, width = "100%")
visSave(network, file = "~/Desktop/network.html")
visNetwork(nodes, edges, width = "100%")
pmids_ch <- paste(pmids, collapse=",")
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "lightblue"
if(grepl(nodes$id[i], pmids_ch)){
nodes$color[i] <- "red"
}
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges, width = "100%")
library(plyr)
library(XML)
library(RCurl)
library(readxl)
library(visNetwork)
setwd("~/OneDrive - UCL/03_research/0-plant-image-analysis/outcome/papers/2016_state-of-plant-image-analysis/figures/")
rs <- read_excel("pia_data.xlsx")
all_pmids <- paste(rs$pmid, collapse=",")
citegraph <- NULL
for(i in 1:nrow(rs)){
if(rs$pmid[i] > 0){
# Get more info with the pmid id
tryCatch({
# Get the XML data
path <- paste("https://www.ncbi.nlm.nih.gov/pubmed?linkname=pubmed_pubmed_citedin&from_uid=",rs$pmid[i],"&report=uilist&format=text&dispmax=200", sep="")
f <- file(path)
data <- readLines(f, warn = F)
data <- gsub("&lt;", "<", data)
data <- gsub("&gt;", ">", data)
pmids <-strsplit(xmlToList(xmlParse(data, asText = T))[1], "\n")[[1]]
close(f)
if(length(pmids) < 200){
for(pm in pmids){
method = 0
if(grepl(pm, all_pmids)) method=1
citegraph <- rbind(citegraph, data.frame(pmid=rs$pmid[i], citing=as.numeric(pm), is_method = method))
}
}
message(paste0(rs$pmid[i]," done: ",length(pmids)," citations"))
# Store the failed PMIDS
}, warning = function(w) {
print(w)
return(w)
}, error = function(e) {
print(e)
return(e)
})
}
}
data <- ddply(citegraph, .(pmid), summarise, all=length(citing), ratio = length(citing[is_method=1])/length(citing))
summary(data$ratio)
# Visualization
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "lightblue"
if(grepl(nodes$id[i], all_pmids)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges, width = "100%")
visNetwork(nodes, edges, width = "100%")
visNetwork(nodes, edges, width = "100%", height="100%")
visNetwork(nodes, edges)
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "#2F75BF"
if(grepl(nodes$id[i], all_pmids)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges)
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "#2F75BF50"
if(grepl(nodes$id[i], all_pmids)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
visNetwork(nodes, edges)
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "#2F75BF80"
if(grepl(nodes$id[i], all_pmids)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
for(i in 1:nrow(nodes)){
edges$color[i] <- "#2F75BF80"
if(grepl(edges$from[i], all_pmids) & grepl(edges$to[i], all_pmids)) edges$color[i] <- "red"
}
head(edges)
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
for(i in 1:nrow(nodes)){
edges$color[i] <- "#2F75BF80"
edges$width[i] <- 1
if(grepl(edges$from[i], all_pmids) & grepl(edges$to[i], all_pmids)){
edges$color[i] <- "red"
edges$width[i] <- 1.5
}
}
visNetwork(nodes, edges)
visNetwork(nodes[1:20,], edges[1:20,])
# Visualization
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "#2F75BF80"
if(grepl(nodes$id[i], all_pmids)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
for(i in 1:nrow(nodes)){
edges$color[i] <- "#2F75BF"
edges$width[i] <- 1.5
if(grepl(edges$from[i], all_pmids) & grepl(edges$to[i], all_pmids)){
edges$color[i] <- "red"
edges$width[i] <- 2.5
}
}
visNetwork(nodes, edges)
# Visualization
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "#2F75BF80"
if(grepl(nodes$id[i], all_pmids)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
for(i in 1:nrow(nodes)){
edges$color[i] <- "#2F75BF"
edges$value[i] <- 1.5
if(grepl(edges$from[i], all_pmids) & grepl(edges$to[i], all_pmids)){
edges$color[i] <- "red"
edges$value[i] <- 2.5
}
}
visNetwork(nodes, edges)
# Visualization
nodes <- data.frame(id=unique(c(citegraph$pmid, citegraph$citing)))
for(i in 1:nrow(nodes)){
nodes$color[i] <- "#2F75BF80"
if(grepl(nodes$id[i], all_pmids)) nodes$color[i] <- "red"
}
edges <- data.frame(from = citegraph[,2], to = citegraph[,1])
for(i in 1:nrow(nodes)){
edges$color[i] <- "#2F75BF"
edges$value[i] <- 1
if(grepl(edges$from[i], all_pmids) & grepl(edges$to[i], all_pmids)){
edges$color[i] <- "red"
edges$value[i] <- 2
}
}
visNetwork(nodes, edges)
library(readxl)
setwd("~/OneDrive - UCL/03_research/0-plant-image-analysis/outcome/papers/2016_state-of-plant-image-analysis/figures/")
rs <- read_excel("pia_data.xlsx")
setwd("~/OneDrive - UCL/03_research/0-plant-image-analysis/outcome/papers/2016_state-of-plant-image-analysis/plantimageanalysistools_repo")
library(readxl)
rs <- read_excel("pia_data.xlsx")
rs$link_alive[rs$link_alive == -1] <- "no link"
rs$link_alive[rs$link_alive == 1] <- "working link"
rs$link_alive[rs$link_alive == 0] <- "broken link"
table(rs$link_alive)
table(rs$validation_type)
rs$image_class <- "-1"
rs$image_class[rs$image_number == 0 ] <- "0"
rs$image_class[rs$image_number > 0 & rs$image_number < 50] <- "50"
rs$image_class[rs$image_number > 50 & rs$image_number < 100] <- "100"
rs$image_class[rs$image_number > 100 & rs$image_number < 1000] <- "1000"
rs$image_class[rs$image_number > 1000] <- "1000+"
rs$image_class[is.na(rs$image_number)] <- NA
table(rs$image_class)
length(rs$image_class)
table(rs$image_available)
rs$licence[grepl("open", rs$licence)] <- "open-source"
rs$licence[grepl("free", rs$licence)] <- "freeware"
rs$licence[grepl("demand", rs$licence)] <- "on-demand"
table(rs$licence)
table(rs$open_access)
rs$citation_rate <- rs$cites / (2017-rs$year)
summary(rs$citation_rate)
hist(rs$citation_rate)
boxplot(rs$citation_rate ~ rs$method)
fit <- aov(rs$citation_rate ~ rs$method)
summary(fit)
survey <- read_excel("pia_responses.xlsx")
message(paste0(nrow(rs)-nrow(survey), " / ", nrow(survey)))
table(survey$developped)
table(survey$permanent)
table(survey$maintained)
